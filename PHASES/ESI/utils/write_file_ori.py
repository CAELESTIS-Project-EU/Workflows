import os
def write_settemperature(file, temperature_file, temp_mold_curing):
    incfile= open(temperature_file,"r")
    if incfile.mode == 'r':
        inclines = incfile.read().splitlines()
        incfile.close()
        inc =  0
        for line in inclines:
            lines = line.split(' ')
            if inc == 0:
                inittemp = lines[1]
                inc += 1
            elif inc == 1:
                timetoreachmaxtemp = lines[0]
                tempresincuring = lines[1]
                inc += 1
            elif inc == 2:
                timeforcure = lines[0]

    if temp_mold_curing != 'N/A':
        tempresincuring = temp_mold_curing
    
    
    
    f= open(file,"w")
    f.write("# -*- coding: utf-8 -*-\n")
    f.write("\"\"\"\n")
    f.write("Created on Fri Jan 20 11:48:17 2023\n")
    f.write("\n")
    f.write("@author: SMO\n")
    f.write("\"\"\"\n")
    f.write("\n")
    f.write("#!/usr/bin/env python\n")
    f.write("# -*- coding: UTF-8 -*-\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#                          Session File\n")
    f.write("#                           ESI Group\n")
    f.write("#                      https://www.esi-group.com\n")
    f.write("#        Copyright (C) ESI Group 2022.  All rights reserved.\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#	Product				:  	Visual-Environment 18.0\n")
    f.write("#	Date				:  	Fri Jan 20 11:41:54 2023\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("null='' \n")
    f.write("from VgPoint3 import *\n")
    f.write("from VgPoint2 import *\n")
    f.write("from VgMatrix import *\n")
    f.write("import VScn\n")
    f.write("import VGuiUtl\n")
    f.write("import VCmdGui\n")
    f.write("import VCmd\n")
    f.write("import VCmdFramework\n")
    f.write("import VistaDb\n")
    f.write("NULL=VistaDb.PythonCNULL()\n")
    f.write("import VistaDb\n")
    f.write("#__________________ VhmCommand BEGIN __________________\n")
    f.write("var1=VCmd.Activate( 1, r\"VHostManagerPlugin.VhmInterface\", r\"VhmCommand\" )\n")
    f.write("import VHostManager\n")
    f.write("import VE\n")
    f.write("import VExpMngr\n")
    f.write("#__________________ SessionCommand BEGIN __________________\n")
    f.write("var2=VCmd.Activate( 1, r\"VSessionManager.Command\", r\"SessionCommand\" )\n")
    f.write("import VToolKit\n")
    f.write("#__________________ VEAction BEGIN __________________\n")
    f.write("var3=VCmd.Activate( 1, r\"VToolKit.VSectionCutInterface\", r\"VEAction\" )\n")
    f.write("import VBrowserManager\n")
    f.write("import VMaterial\n")
    f.write("import VMeshMdlr\n")
    f.write("ret=VE.ChangeContext( r\"Visual-RTM\" )\n")
    f.write("VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("VE.SetCurrentPage( 1 )\n")
    f.write("VExpMngr.SetFilesOfType( r\"All\" )\n")
    f.write("import os\n")
    f.write("#SMO: read macro directory from temporary file\n")
    f.write("Scriptsfolder = os.getcwd()\n")
    f.write("VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')\n")
    f.write("\n")
    f.write("line_no = 0\n")
    f.write("incfile= open(VariablesList,\"r\")\n")
    f.write("if incfile.mode == 'r':\n")
    f.write("    inclines = incfile.read().splitlines()\n")
    f.write("    incfile.close()\n")
    f.write("    for line in inclines:\n")
    f.write("        line_no += 1\n")
    f.write("        if 'VdbCuringFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            VdbFilePath = linesplit[2]\n")
    f.write("        if 'RTMunfFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            L_RTMgUnfFile = linesplit[2]\n")
    f.write("            \n")
    f.write("ret=VExpMngr.LoadFile(VdbFilePath,0)\n")
    f.write("ret=VE.ModelChange( \"M  @0\" )\n")
    f.write("\n")
    f.write("VCmd.SetStringValue( var1, r\"DisplayMode\", r\"Flat and Wireframe\" )\n")
    

    f.write("#__________________ BoundaryConditions BEGIN __________________)\n")
    f.write("var7=VCmd.Activate( 1, r\"VRTMUtilities.VRTMInterface\", r\"BoundaryConditions\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveBcType\", r\"Temperature\" )\n")
    f.write("VCmd.SetGuStringValue( var7, r\"OpeningMode\", r\"CreateSpecificType\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveBcName\", r\"Temperature_1\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveBcParam\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ParamValue\", r\"F(t)\" )\n")
    f.write("ret=VCmd.ExecuteCommand( var7, r\"UpdateCurve\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveBcParam\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveProperty\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyValueUnit\", r\"C\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyFuncUnit\", r\"sec\" )\n")
    f.write("ret=VCmd.ExecuteCommand( var7, r\"UpdateParamForUnit\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveBcParam\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveProperty\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyValueUnit\", r\"C\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyFuncUnit\", r\"sec\" )\n")
    f.write("ret=VCmd.ExecuteCommand( var7, r\"UpdateParamForUnit\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"ActiveProperty\", r\"temperatureValue\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyValueUnit\", r\"C\" )\n")
    f.write("VCmd.SetStringValue( var7, r\"PropertyFuncUnit\", r\"sec\" )\n")
    f.write("ret=VCmd.ExecuteCommand( var7, r\"UpdateParamForUnit\" )\n")
    f.write("lst1_count,lst1 =  VScn.Point2List( \" 0. " + str(inittemp) + "  |  \\")
    f.write("\n")
    f.write(str(timetoreachmaxtemp) + " " +  str(tempresincuring) + "  |  \\")
    f.write("\n")
    f.write(str(timeforcure) + " " + str(tempresincuring) + "  |  \\")
    f.write("\n")
    f.write(" \"  )" + "\n")
    f.write("VCmd.SetPoint2ArrayValue( var7, r\"PropertyTValue\", lst1_count, lst1 )\n")   
    f.write("VCmd.Accept( var7 )\n")
    f.write("VCmd.Quit( var7 )\n")
    
    f.write("#__________________ UserDefineRegionChild END __________________)\n")
    f.write("VExpMngr.ExportFile( VdbFilePath, 0 )\n")
    f.write("# ret=VE.ModelDestroy( \"M  @0\" )\n")
    f.write("# VE.SetCurrentPage( 1 )\n")
    f.write("# VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("# VE.NewSession(  )\n")
    
    f.close()





def write_mapping(file, nbstep):
    f= open(file,"w")
    f.write("# -*- coding: utf-8 -*-\n")
    f.write("\"\"\"\n")
    f.write("Created on Fri Jan 20 11:48:17 2023\n")
    f.write("\n")
    f.write("@author: SMO\n")
    f.write("\"\"\"\n")
    f.write("\n")
    f.write("#!/usr/bin/env python\n")
    f.write("# -*- coding: UTF-8 -*-\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#                          Session File\n")
    f.write("#                           ESI Group\n")
    f.write("#                      https://www.esi-group.com\n")
    f.write("#        Copyright (C) ESI Group 2022.  All rights reserved.\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#	Product				:  	Visual-Environment 18.0\n")
    f.write("#	Date				:  	Fri Jan 20 11:41:54 2023\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("null='' \n")
    f.write("from VgPoint3 import *\n")
    f.write("from VgPoint2 import *\n")
    f.write("from VgMatrix import *\n")
    f.write("import VScn\n")
    f.write("import VGuiUtl\n")
    f.write("import VCmdGui\n")
    f.write("import VCmd\n")
    f.write("import VCmdFramework\n")
    f.write("import VistaDb\n")
    f.write("NULL=VistaDb.PythonCNULL()\n")
    f.write("import VistaDb\n")
    f.write("#__________________ VhmCommand BEGIN __________________\n")
    f.write("var1=VCmd.Activate( 1, r\"VHostManagerPlugin.VhmInterface\", r\"VhmCommand\" )\n")
    f.write("import VHostManager\n")
    f.write("import VE\n")
    f.write("import VExpMngr\n")
    f.write("#__________________ SessionCommand BEGIN __________________\n")
    f.write("var2=VCmd.Activate( 1, r\"VSessionManager.Command\", r\"SessionCommand\" )\n")
    f.write("import VToolKit\n")
    f.write("#__________________ VEAction BEGIN __________________\n")
    f.write("var3=VCmd.Activate( 1, r\"VToolKit.VSectionCutInterface\", r\"VEAction\" )\n")
    f.write("import VBrowserManager\n")
    f.write("import VMaterial\n")
    f.write("import VMeshMdlr\n")
    f.write("ret=VE.ChangeContext( r\"Visual-RTM\" )\n")
    f.write("VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("VE.SetCurrentPage( 1 )\n")
    f.write("VExpMngr.SetFilesOfType( r\"All\" )\n")
    f.write("import os\n")
    f.write("#SMO: read macro directory from temporary file\n")
    f.write("Scriptsfolder = os.getcwd()\n")
    f.write("VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')\n")
    f.write("\n")
    f.write("line_no = 0\n")
    f.write("incfile= open(VariablesList,\"r\")\n")
    f.write("if incfile.mode == 'r':\n")
    f.write("    inclines = incfile.read().splitlines()\n")
    f.write("    incfile.close()\n")
    f.write("    for line in inclines:\n")
    f.write("        line_no += 1\n")
    f.write("        if 'VdbCuringFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            VdbFilePath = linesplit[2]\n")
    f.write("        if 'RTMunfFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            L_RTMgUnfFile = linesplit[2]\n")
    f.write("            \n")
    f.write("ret=VExpMngr.LoadFile(VdbFilePath,0)\n")
    f.write("ret=VE.ModelChange( \"M  @0\" )\n")
    f.write("\n")
    f.write("VCmd.SetStringValue( var1, r\"DisplayMode\", r\"Flat and Wireframe\" )\n")
    

    f.write("#__________________ Extract BEGIN __________________)\n")
    f.write("var10=VCmd.Activate( 1, r\"VCastUtilities.VCastInterface\", r\"Extract\" )\n")
    f.write("VCmd.SetStringValue( var10, r\"ExtractMethod\", r\"Extract\" )\n")
    f.write("VCmd.SetStringValue( var10, r\"StepType\", r\"Step\" )\n")
    f.write("lst1_count,lst1 =  VScn.List( \"  P ALL \"  )\n")
    f.write("VCmd.SetObjectArrayValue( var10, r\"Parts\", lst1_count, lst1 )\n")
    f.write("VCmd.SetStringValue( var10, r\"ResultFile\", L_RTMgUnfFile )\n")
    f.write("VCmd.SetStringValue( var10, r\"ExtractMethod\", r\"Mapping\" )\n")
    f.write("VCmd.SetStringValue( var10, r\"StepType\", r\"Step\" )\n")
    f.write("VCmd.SetStringValue( var10, r\"StepType\", r\"Step\" )\n")
    f.write("VCmd.SetIntValue( var10, r\"Step\", " + str(nbstep) + " )\n")
    f.write("ret=VCmd.ExecuteCommand( var10, r\"Mapping\" )\n")
    f.write("VCmd.Accept( var10 )\n")
    f.write("VCmd.Quit( var10 )\n")

    f.write("#__________________ UserDefineRegionChild END __________________)\n")
    f.write("VExpMngr.ExportFile( VdbFilePath, 0 )\n")
    f.write("# ret=VE.ModelDestroy( \"M  @0\" )\n")
    f.write("# VE.SetCurrentPage( 1 )\n")
    f.write("# VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("# VE.NewSession(  )\n")
    
    f.close()
    
def write_ori(file):
    #SMO: read macro directory from temporary file\n")
    Scriptsfolder = os.getcwd()
    VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')
    line_no = 0
    incfile= open(VariablesList,"r")
    if incfile.mode == 'r':
        inclines = incfile.read().splitlines()
        incfile.close()
        for line in inclines:
            line_no += 1
            if 'Orientation' in line:
                linesplit = line.partition('= ')                       
                Orientation = linesplit[2]
                
    Ply_Ori_dist = Orientation.split('&')
    plies = []
    ori = []
            
    for i in range(len(Ply_Ori_dist)):
        data = Ply_Ori_dist[i]
        data_dist = data.split('#')
        plies.append(data_dist[0])
        ori.append(data_dist[1])



    f= open(file,"w")

    f.write("# -*- coding: utf-8 -*-\n")
    f.write("\"\"\"\n")
    f.write("Created on Fri Jan 20 11:48:17 2023\n")
    f.write("\n")
    f.write("@author: SMO\n")
    f.write("\"\"\"\n")
    f.write("\n")
    f.write("#!/usr/bin/env python\n")
    f.write("# -*- coding: UTF-8 -*-\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#                          Session File\n")
    f.write("#                           ESI Group\n")
    f.write("#                      https://www.esi-group.com\n")
    f.write("#        Copyright (C) ESI Group 2022.  All rights reserved.\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#	Product				:  	Visual-Environment 18.0\n")
    f.write("#	Date				:  	Fri Jan 20 11:41:54 2023\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("null='' \n")
    f.write("from VgPoint3 import *\n")
    f.write("from VgPoint2 import *\n")
    f.write("from VgMatrix import *\n")
    f.write("import VScn\n")
    f.write("import VGuiUtl\n")
    f.write("import VCmdGui\n")
    f.write("import VCmd\n")
    f.write("import VCmdFramework\n")
    f.write("import VistaDb\n")
    f.write("NULL=VistaDb.PythonCNULL()\n")
    f.write("import VistaDb\n")
    f.write("#__________________ VhmCommand BEGIN __________________\n")
    f.write("var1=VCmd.Activate( 1, r\"VHostManagerPlugin.VhmInterface\", r\"VhmCommand\" )\n")
    f.write("import VHostManager\n")
    f.write("import VE\n")
    f.write("import VExpMngr\n")
    f.write("#__________________ SessionCommand BEGIN __________________\n")
    f.write("var2=VCmd.Activate( 1, r\"VSessionManager.Command\", r\"SessionCommand\" )\n")
    f.write("import VToolKit\n")
    f.write("#__________________ VEAction BEGIN __________________\n")
    f.write("var3=VCmd.Activate( 1, r\"VToolKit.VSectionCutInterface\", r\"VEAction\" )\n")
    f.write("import VBrowserManager\n")
    f.write("import VMaterial\n")
    f.write("import VMeshMdlr\n")
    f.write("ret=VE.ChangeContext( r\"Visual-RTM\" )\n")
    f.write("VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("VE.SetCurrentPage( 1 )\n")
    f.write("VExpMngr.SetFilesOfType( r\"All\" )\n")
    f.write("import os\n")
    f.write("#SMO: read macro directory from temporary file\n")
    f.write("Scriptsfolder = os.getcwd()\n")
    f.write("VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')\n")
    f.write("\n")
    f.write("line_no = 0\n")
    f.write("incfile= open(VariablesList,\"r\")\n")
    f.write("if incfile.mode == 'r':\n")
    f.write("    inclines = incfile.read().splitlines()\n")
    f.write("    incfile.close()\n")
    f.write("    for line in inclines:\n")
    f.write("        line_no += 1\n")
    f.write("        if 'VdbRTMFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            VdbFilePath = linesplit[2]\n")
    f.write("            \n")
    f.write("ret=VExpMngr.LoadFile(VdbFilePath,0)\n")
    f.write("ret=VE.ModelChange( \"M  @0\" )\n")
    f.write("\n")
    f.write("VCmd.SetStringValue( var1, r\"DisplayMode\", r\"Flat and Wireframe\" )\n")
        
        
    for i in range(len(plies)):
        f.write("#__________________ RtmLayerDesignManager BEGIN __________________)\n")
        f.write("var5=VCmd.Activate( 1, r\"VCompUtils.VCompUtilsCmdInterface\", r\"RtmLayerDesignManager\" )\n")
        f.write("VCmd.SetGuStringValue( var5, r\"LayerLaminateListFlag\", r\"LayerList\" )\n")
        f.write("VCmd.SetIntValue( var5, r\"SelectedRowForAssignment\", 4 )\n")
        f.write("VCmd.SetGuStringValue( var5, r\"LayerName\", r\"Layer_" + plies[i] + "\" )\n")
        f.write("VCmd.SetDoubleValue( var5, r\"LayerAngle\", "+ ori[i] +"  )\n")
        f.write("VCmd.Accept( var5 )\n")
        f.write("VCmd.Quit( var5 )\n")

    f.write("#__________________ UserDefineRegionChild END __________________)\n")
    f.write("VExpMngr.ExportFile( VdbFilePath, 0 )\n")
    f.write("# ret=VE.ModelDestroy( \"M  @0\" )\n")
    f.write("# VE.SetCurrentPage( 1 )\n")
    f.write("# VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("# VE.NewSession(  )\n")
    f.close()
    
    
    
def write_ori_dist(file):
    #SMO: read macro directory from temporary file\n")
    Scriptsfolder = os.getcwd()
    VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')
    line_no = 0
    incfile= open(VariablesList,"r")
    if incfile.mode == 'r':
        inclines = incfile.read().splitlines()
        incfile.close()
        for line in inclines:
            line_no += 1
            if 'Orientation' in line:
                linesplit = line.partition('= ')                       
                Orientation = linesplit[2]
                
    Ply_Ori_dist = Orientation.split('&')
    plies = []
    ori = []
            
    for i in range(len(Ply_Ori_dist)):
        data = Ply_Ori_dist[i]
        data_dist = data.split('#')
        plies.append(data_dist[0])
        ori.append(data_dist[1])



    f= open(file,"w")

    f.write("# -*- coding: utf-8 -*-\n")
    f.write("\"\"\"\n")
    f.write("Created on Fri Jan 20 11:48:17 2023\n")
    f.write("\n")
    f.write("@author: SMO\n")
    f.write("\"\"\"\n")
    f.write("\n")
    f.write("#!/usr/bin/env python\n")
    f.write("# -*- coding: UTF-8 -*-\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#                          Session File\n")
    f.write("#                           ESI Group\n")
    f.write("#                      https://www.esi-group.com\n")
    f.write("#        Copyright (C) ESI Group 2022.  All rights reserved.\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("#	Product				:  	Visual-Environment 18.0\n")
    f.write("#	Date				:  	Fri Jan 20 11:41:54 2023\n")
    f.write("#-------------------------------------------------------------------------------\n")
    f.write("null='' \n")
    f.write("from VgPoint3 import *\n")
    f.write("from VgPoint2 import *\n")
    f.write("from VgMatrix import *\n")
    f.write("import VScn\n")
    f.write("import VGuiUtl\n")
    f.write("import VCmdGui\n")
    f.write("import VCmd\n")
    f.write("import VCmdFramework\n")
    f.write("import VistaDb\n")
    f.write("NULL=VistaDb.PythonCNULL()\n")
    f.write("import VistaDb\n")
    f.write("#__________________ VhmCommand BEGIN __________________\n")
    f.write("var1=VCmd.Activate( 1, r\"VHostManagerPlugin.VhmInterface\", r\"VhmCommand\" )\n")
    f.write("import VHostManager\n")
    f.write("import VE\n")
    f.write("import VExpMngr\n")
    f.write("#__________________ SessionCommand BEGIN __________________\n")
    f.write("var2=VCmd.Activate( 1, r\"VSessionManager.Command\", r\"SessionCommand\" )\n")
    f.write("import VToolKit\n")
    f.write("#__________________ VEAction BEGIN __________________\n")
    f.write("var3=VCmd.Activate( 1, r\"VToolKit.VSectionCutInterface\", r\"VEAction\" )\n")
    f.write("import VBrowserManager\n")
    f.write("import VMaterial\n")
    f.write("import VMeshMdlr\n")
    f.write("ret=VE.ChangeContext( r\"Visual-Distortion\" )\n")
    f.write("VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("VE.SetCurrentPage( 1 )\n")
    f.write("VExpMngr.SetFilesOfType( r\"All\" )\n")
    f.write("import os\n")
    f.write("#SMO: read macro directory from temporary file\n")
    f.write("Scriptsfolder = os.getcwd()\n")
    f.write("VariablesList = os.path.join(Scriptsfolder,'VariablesList.txt')\n")
    f.write("\n")
    f.write("line_no = 0\n")
    f.write("incfile= open(VariablesList,\"r\")\n")
    f.write("if incfile.mode == 'r':\n")
    f.write("    inclines = incfile.read().splitlines()\n")
    f.write("    incfile.close()\n")
    f.write("    for line in inclines:\n")
    f.write("        line_no += 1\n")
    f.write("        if 'VdbDistortionFilePath' in line:\n")
    f.write("            linesplit = line.partition('= ')\n")
    f.write("            #Extract Variable name, value and IDnumber identificator\n")                           
    f.write("            VdbFilePath = linesplit[2]\n")
    f.write("            \n")
    f.write("ret=VExpMngr.LoadFile(VdbFilePath,0)\n")
    f.write("ret=VE.ModelChange( \"M  @0\" )\n")
    f.write("\n")
    f.write("VCmd.SetStringValue( var1, r\"DisplayMode\", r\"Flat and Wireframe\" )\n")
        
        
    for i in range(len(plies)):
        f.write("#__________________ RtmLayerDesignManager BEGIN __________________)\n")
        f.write("var5=VCmd.Activate( 1, r\"VCompUtils.VCompUtilsCmdInterface\", r\"RtmLayerDesignManager\" )\n")
        f.write("VCmd.SetGuStringValue( var5, r\"LayerLaminateListFlag\", r\"LayerList\" )\n")
        f.write("VCmd.SetIntValue( var5, r\"SelectedRowForAssignment\", 4 )\n")
        f.write("VCmd.SetGuStringValue( var5, r\"LayerName\", r\"Layer_" + plies[i] + "\" )\n")
        f.write("VCmd.SetDoubleValue( var5, r\"LayerAngle\", "+ ori[i] +"  )\n")
        f.write("VCmd.Accept( var5 )\n")
        f.write("VCmd.Quit( var5 )\n")

    f.write("#__________________ UserDefineRegionChild END __________________)\n")
    f.write("VExpMngr.ExportFile( VdbFilePath, 0 )\n")
    f.write("# ret=VE.ModelDestroy( \"M  @0\" )\n")
    f.write("# VE.SetCurrentPage( 1 )\n")
    f.write("# VE.SetActiveWindow( r\"p1w1\" )\n")
    f.write("# VE.NewSession(  )\n")
    f.close()